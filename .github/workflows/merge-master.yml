name: Merge on master & Publish

on:
  push:
    branches: [master, next]

jobs:
  dependencies:
    name: Cache dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: 12
      - uses: actions/cache@master
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install

  sonar:
    name: Sonar Scan
    runs-on: ubuntu-latest
    steps:
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  lint:
    name: Linter
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - uses: actions/checkout@master
        with:
          ref: master

      - run: git fetch --no-tags --prune --depth=5 origin master

      - uses: actions/setup-node@master
        with:
          node-version: 12

      - name: Restore dependencies from cache
        uses: actions/cache@master
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run linting
        run: yarn affected:lint --base=origin/master~1

  test:
    name: Test applications & libraries
    runs-on: ubuntu-latest
    needs: [dependencies]
    steps:
      - uses: actions/checkout@master
        with:
          ref: master

      - run: git fetch --no-tags --prune --depth=5 origin master

      - uses: actions/setup-node@master
        with:
          node-version: 12

      - name: Restore dependencies from cache
        uses: actions/cache@master
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run tests
        run: yarn affected:test --base=origin/master~1

  publish:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Publish
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@master
        with:
          ref: master

      - run: git fetch --no-tags --prune --depth=5 origin master

      - name: Setup Node.js with Npm Package Registry
        uses: actions/setup-node@master
        with:
          node-version: 12

      - name: Restore dependencies from cache
        uses: actions/cache@master
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run builders Affected. Run many?
        run: yarn nx run-many --parallel --maxParallel=5 --target build --with-deps --all --verbose
        # run: yarn affected:build --base=origin/master~1 --prod --with-deps

      - name: Run Semantic Release
        run: yarn semantic-release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # - name: Deploy
      #   shell: bash
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #   run: |
      #     export AFFECTED=$(node node_modules/.bin/nx affected:libs --plain --base=origin/master~1)
      #     export ROOT_DIR="$PWD"
      #     if [[ "$AFFECTED" != "" ]]; then
      #       while IFS= read -r -d $' ' lib; do

      #         npm publish "$ROOT_DIR/dist/libs/${lib/-//}" --access=public

      #         wait
      #       done <<<"$AFFECTED "
      #     else
      #       echo "No Libraries to publish"
      #     fi

      # - name: Setup Node.js with GitHub Package Registry
      #   uses: actions/setup-node@master
      #   with:
      #     node-version: 12
      #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      #     registry-url: 'https://npm.pkg.github.com'
      #     scope: 'henryqrm'

      # - name: Publish To GitHub Package Registry
      #   env:
      #     NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      #   run: |
      #     export AFFECTED=$(node node_modules/.bin/nx affected:libs --plain --base=origin/master~1)
      #     export ROOT_DIR="$PWD"
      #     if [[ "$AFFECTED" != "" ]]; then
      #       while IFS= read -r -d $' ' lib; do

      #         npm publish "$ROOT_DIR/dist/libs/${lib/-//}"

      #         wait
      #       done <<<"$AFFECTED "
      #     else
      #       echo "No Libraries to publish"
      #     fi
