name: PR on master

on:
  pull_request:
    paths: 'libs/**'
    branches:
      - master
    types: [opened, reopened, synchronize]

jobs:
  verify:
    name: Pull request
    runs-on: ubuntu-latest

    outputs:
      nx_build_libs: ${{ steps.build.outputs.nx_build_libs }}
      nx_affected_libs: ${{ steps.affected.outputs.nx_affected_libs }}

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      # Checkout code
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Setup Node.js ${{ matrix.node-version }} with GitHub Package Registry
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
      - run: yarn
        if: |
          steps.cache-yarn-cache.outputs.cache-hit != 'true' ||
          steps.cache-node-modules.outputs.cache-hit != 'true'

      - name: Affected libs
        shell: bash
        id: affected
        run: |
          if [[ ${{ github.base_ref }} ]]
          then
            export NX_BASE=$(git rev-parse origin/${{ github.base_ref }})
          else
            export NX_BASE=$(git rev-parse HEAD~1)
          fi
          if [[ ${{ github.head_ref }} ]]
          then
            export NX_HEAD=$(git rev-parse origin/${{ github.head_ref }})
          else
            export NX_HEAD=$(git rev-parse HEAD~1)
          fi
          echo base: $NX_BASE
          echo head: $NX_HEAD

          git fetch --no-tags --prune --depth=5 origin ${{ github.sha }}
          node ./tools/scripts/affected.js  --base=$NX_BASE --head=$NX_HEAD

      - name: Linter
        shell: bash
        run: yarn affected:lint -- --base=$(git rev-parse origin/${{ github.base_ref }}) --head=$(git rev-parse origin/${{ github.head_ref }})

      - name: Test
        run: yarn affected:test --base=${{ github.base_ref }} --head=${{ github.head_ref }}

      - name: E2e
        run: yarn affected:e2e --base=${{ github.base_ref }} --head=${{ github.head_ref }}





